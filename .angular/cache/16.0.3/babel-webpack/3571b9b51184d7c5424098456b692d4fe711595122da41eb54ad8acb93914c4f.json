{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { baseURL } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass UsuarioService {\n  constructor(oHttp) {\n    this.oHttp = oHttp;\n    this.entityURL = '/user';\n    this.url = \"\";\n    this.url = `${baseURL}${this.entityURL}`;\n  }\n  getUsuarioPlist(page, size, termino, id_usertype, strSortField, strOrderDirection) {\n    let params = new HttpParams().set(\"page\", page).set(\"size\", size);\n    if (termino) {\n      params = params.set('filter', termino.trim());\n    }\n    if (id_usertype != 0) {\n      params = params.set(\"usertype\", id_usertype);\n    }\n    if (strSortField != \"\") {\n      //&sort=codigo,[asc|desc]\n      if (strOrderDirection != \"\") {\n        params = params.set(\"sort\", strSortField + \",\" + strOrderDirection);\n      } else {\n        params = params.set(\"sort\", strSortField);\n      }\n    }\n    return this.oHttp.get(this.url, {\n      params: params\n    });\n  }\n  getOne(id) {\n    return this.oHttp.get(this.url + \"/\" + id);\n  }\n  removeOne(id) {\n    return this.oHttp.delete(this.url + '/' + id);\n  }\n  updateOne(oUsuario2Send) {\n    return this.oHttp.put(this.url, oUsuario2Send, {\n      withCredentials: true\n    });\n  }\n  newOne(oUsuario2Send) {\n    return this.oHttp.post(this.url, oUsuario2Send, {\n      withCredentials: true\n    });\n  }\n  generate() {\n    return this.oHttp.post(this.url + \"/generate\", null, {\n      withCredentials: true\n    });\n  }\n}\nUsuarioService.ɵfac = function UsuarioService_Factory(t) {\n  return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioService,\n  factory: UsuarioService.ɵfac,\n  providedIn: 'root'\n});\nexport { UsuarioService };","map":{"version":3,"names":["HttpParams","baseURL","UsuarioService","constructor","oHttp","entityURL","url","getUsuarioPlist","page","size","termino","id_usertype","strSortField","strOrderDirection","params","set","trim","get","getOne","id","removeOne","delete","updateOne","oUsuario2Send","put","withCredentials","newOne","post","generate","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/datos/usuarios/alumnos/a073225298z/gameRatedFrontEnd/src/app/service/usuario.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { baseURL } from 'src/environments/environment';\nimport { IPage } from '../model/generic-types-interface';\nimport { Observable } from 'rxjs';\nimport { IUsuario, IUsuario2Send } from '../model/usuario-interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n  private entityURL = '/user';\n  url: string = \"\"\n\n  constructor(private oHttp: HttpClient) {\n    this.url = `${baseURL}${this.entityURL}`;\n  }\n  getUsuarioPlist(page: number, size: number, termino: string, id_usertype: number, strSortField: string, strOrderDirection: string): Observable<IPage<IUsuario>> {\n    let params = new HttpParams()\n      .set(\"page\", page)\n      .set(\"size\", size);\n    if (termino) {\n      params = params.set('filter', termino.trim());\n    }\n    if (id_usertype != 0) {\n      params = params.set(\"usertype\", id_usertype);\n    }\n    if (strSortField != \"\") { //&sort=codigo,[asc|desc]\n      if (strOrderDirection != \"\") {\n        params = params.set(\"sort\", strSortField + \",\" + strOrderDirection);\n      } else {\n        params = params.set(\"sort\", strSortField);\n      }\n    }\n    return this.oHttp.get<IPage<IUsuario>>(this.url, { params: params });\n  }\n\n  getOne(id: number): Observable<IUsuario> {\n    return this.oHttp.get<IUsuario>(this.url + \"/\" + id);\n  }\n\n  removeOne(id: number): Observable<number> {\n    return this.oHttp.delete<number>(this.url + '/' + id);\n  }\n\n  updateOne(oUsuario2Send: IUsuario2Send): Observable<number> {\n    return this.oHttp.put<number>(this.url, oUsuario2Send, { withCredentials: true });\n  }\n\n  \n  newOne(oUsuario2Send: IUsuario2Send): Observable<number> {\n    return this.oHttp.post<number>(this.url, oUsuario2Send, { withCredentials: true });\n  }\n\n  generate(): Observable<IUsuario> {\n    return this.oHttp.post<IUsuario>(this.url + \"/generate\", null, { withCredentials: true });\n  }\n\n\n}\n"],"mappings":"AACA,SAAqBA,UAAU,QAAQ,sBAAsB;AAC7D,SAASC,OAAO,QAAQ,8BAA8B;;;AAMtD,MAGaC,cAAc;EAIzBC,YAAoBC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IAHjB,KAAAC,SAAS,GAAG,OAAO;IAC3B,KAAAC,GAAG,GAAW,EAAE;IAGd,IAAI,CAACA,GAAG,GAAG,GAAGL,OAAO,GAAG,IAAI,CAACI,SAAS,EAAE;EAC1C;EACAE,eAAeA,CAACC,IAAY,EAAEC,IAAY,EAAEC,OAAe,EAAEC,WAAmB,EAAEC,YAAoB,EAAEC,iBAAyB;IAC/H,IAAIC,MAAM,GAAG,IAAId,UAAU,EAAE,CAC1Be,GAAG,CAAC,MAAM,EAAEP,IAAI,CAAC,CACjBO,GAAG,CAAC,MAAM,EAAEN,IAAI,CAAC;IACpB,IAAIC,OAAO,EAAE;MACXI,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,QAAQ,EAAEL,OAAO,CAACM,IAAI,EAAE,CAAC;;IAE/C,IAAIL,WAAW,IAAI,CAAC,EAAE;MACpBG,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,UAAU,EAAEJ,WAAW,CAAC;;IAE9C,IAAIC,YAAY,IAAI,EAAE,EAAE;MAAE;MACxB,IAAIC,iBAAiB,IAAI,EAAE,EAAE;QAC3BC,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,MAAM,EAAEH,YAAY,GAAG,GAAG,GAAGC,iBAAiB,CAAC;OACpE,MAAM;QACLC,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,MAAM,EAAEH,YAAY,CAAC;;;IAG7C,OAAO,IAAI,CAACR,KAAK,CAACa,GAAG,CAAkB,IAAI,CAACX,GAAG,EAAE;MAAEQ,MAAM,EAAEA;IAAM,CAAE,CAAC;EACtE;EAEAI,MAAMA,CAACC,EAAU;IACf,OAAO,IAAI,CAACf,KAAK,CAACa,GAAG,CAAW,IAAI,CAACX,GAAG,GAAG,GAAG,GAAGa,EAAE,CAAC;EACtD;EAEAC,SAASA,CAACD,EAAU;IAClB,OAAO,IAAI,CAACf,KAAK,CAACiB,MAAM,CAAS,IAAI,CAACf,GAAG,GAAG,GAAG,GAAGa,EAAE,CAAC;EACvD;EAEAG,SAASA,CAACC,aAA4B;IACpC,OAAO,IAAI,CAACnB,KAAK,CAACoB,GAAG,CAAS,IAAI,CAAClB,GAAG,EAAEiB,aAAa,EAAE;MAAEE,eAAe,EAAE;IAAI,CAAE,CAAC;EACnF;EAGAC,MAAMA,CAACH,aAA4B;IACjC,OAAO,IAAI,CAACnB,KAAK,CAACuB,IAAI,CAAS,IAAI,CAACrB,GAAG,EAAEiB,aAAa,EAAE;MAAEE,eAAe,EAAE;IAAI,CAAE,CAAC;EACpF;EAEAG,QAAQA,CAAA;IACN,OAAO,IAAI,CAACxB,KAAK,CAACuB,IAAI,CAAW,IAAI,CAACrB,GAAG,GAAG,WAAW,EAAE,IAAI,EAAE;MAAEmB,eAAe,EAAE;IAAI,CAAE,CAAC;EAC3F;;AA9CWvB,cAAc,C;mBAAdA,cAAc,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAd9B,cAAc,C;SAAdA,cAAc;EAAA+B,OAAA,EAAd/B,cAAc,CAAAgC,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPjC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}