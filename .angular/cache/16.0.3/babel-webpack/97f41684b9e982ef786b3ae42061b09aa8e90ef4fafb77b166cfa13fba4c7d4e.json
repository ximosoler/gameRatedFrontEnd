{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass CryptoService {\n  constructor() {}\n  getSHA256(value) {\n    return CryptoJS.SHA256(value).toString(CryptoJS.enc.Hex);\n  }\n}\nCryptoService.ɵfac = function CryptoService_Factory(t) {\n  return new (t || CryptoService)();\n};\nCryptoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CryptoService,\n  factory: CryptoService.ɵfac,\n  providedIn: 'root'\n});\nexport { CryptoService };","map":{"version":3,"names":["CryptoService","constructor","getSHA256","value","CryptoJS","SHA256","toString","enc","Hex","factory","ɵfac","providedIn"],"sources":["C:\\Users\\xsole\\gameRatedFrontEnd\\src\\app\\service\\crypto.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\ndeclare let CryptoJS: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CryptoService {\r\n  constructor() { }\r\n\r\n  getSHA256(value: string) {\r\n    return CryptoJS.SHA256(value).toString(CryptoJS.enc.Hex);\r\n  }\r\n\r\n}\r\n"],"mappings":";AAIA,MAIaA,aAAa;EACxBC,YAAA,GAAgB;EAEhBC,SAASA,CAACC,KAAa;IACrB,OAAOC,QAAQ,CAACC,MAAM,CAACF,KAAK,CAAC,CAACG,QAAQ,CAACF,QAAQ,CAACG,GAAG,CAACC,GAAG,CAAC;EAC1D;;AALWR,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;SAAbA,aAAa;EAAAS,OAAA,EAAbT,aAAa,CAAAU,IAAA;EAAAC,UAAA,EAHZ;AAAM;SAGPX,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}